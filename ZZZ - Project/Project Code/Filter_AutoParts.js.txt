import React, { useState } from "react";
import {
  View,
  Text,
  Button,
  StyleSheet,
  TouchableOpacity,
  Image,
  StatusBar
} from "react-native";
import LocationPicker from "../locationPicker";
import InputRange from "../inputRange";
import CategorySelect from "./CategorySelect";

const Filter_AutoParts = ({ route, navigation }) => {
  const { onFilterApply } = route.params;
  const [minPrice, setMinPrice] = useState(0);
  const [maxPrice, setMaxPrice] = useState(50000);
  const [selectedLocation, setSelectedLocation] = useState("");
  const [selectedCategoryName, setSelectedCategoryName] = useState("");

  const [locationModalVisible, setLocationModalVisible] = useState(false);
  const [categoryModalVisible, setCategoryModalVisible] = useState(false);

  const handleApplyFilter = () => {
    const data = {
      minPrice,
      maxPrice,
      selectedLocation,
      selectedCategoryName,
    };
    onFilterApply(data);
    navigation.goBack();
  };

  const handlePriceRange = (minValue, maxValue) => {
    setMinPrice(minValue);
    setMaxPrice(maxValue);
  };

  const handleOpenLocationPicker = () => {
    setLocationModalVisible(true);
  };
  const handleCloseLocationPicker = () => {
    setLocationModalVisible(false);
  };
  const handleLocationSelect = (location) => {
    setSelectedLocation(location);
    handleCloseLocationPicker();
  };

  const handleOpenCategoryPicker = () => {
    setCategoryModalVisible(true);
  };
  const handleCloseCategoryPicker = () => {
    setCategoryModalVisible(false);
  };
  const handleCategorySelect = (category) => {
    setSelectedCategoryName(category);
    handleCloseCategoryPicker();
  };
  const handleBack = () => {
    navigation.goBack();
  };
  // Main Body
  return (
    <View style={styles.filter}>
      <View style={styles.header}>
        <TouchableOpacity onPress={handleBack} style={styles.backButton}>
          <Image
            source={require("../../assets/back-arrow.png")}
            style={styles.backIcon}
          />
        </TouchableOpacity>
        <View style={styles.titleContainer}>
          <Text style={styles.title}>Auto Parts Filter</Text>
        </View>
      </View>
      {/* - Filter Body - */}
      <View style={styles.InputRangeDiv}>
        <Text>Price Range:</Text>
        <InputRange
          min={0}
          max={50000}
          title={"Price Range"}
          steps={1}
          onValueChange={handlePriceRange}
          style={styles.Input_Range_CSS}
        />
        <View style={styles.values}>
          <Text>{minPrice.toLocaleString()}</Text>
          <Text>{maxPrice.toLocaleString()}</Text>
        </View>
      </View>
      <View style={styles.DataDiv}>
        <Button title="Location" onPress={handleOpenLocationPicker} />
        <LocationPicker
          isVisible={locationModalVisible}
          onClose={handleCloseLocationPicker}
          onSelectLocation={handleLocationSelect}
        />
        <Text>{selectedLocation}</Text>
      </View>
      <View style={styles.DataDiv}>
        <Button title="Category" onPress={handleOpenCategoryPicker} />
        <CategorySelect
          isVisible={categoryModalVisible}
          onClose={handleCloseCategoryPicker}
          onSelectLocation={handleCategorySelect}
        />
        <Text>{selectedCategoryName}</Text>
      </View>
      <View style={styles.ButtonDiv}>
        <Button title="Apply" onPress={handleApplyFilter} color={"green"} />
        <Text>{"\n"}</Text>
        <Button
          title="Remove All"
          onPress={() => {
            setMinPrice(0);
            setMaxPrice(50000);
            setSelectedLocation("");
            setSelectedCategoryName("");
          }}
          color="red"
        />
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 10,
  },
  buyNow: {
    flex: 1,
  },
  fadeOut: {
    opacity: 0,
  },
  fadeIn: {
    opacity: 1,
  },
  pageHeadingCont: {
    alignItems: "center",
    marginVertical: 10,
  },
  pageHeading: {
    fontSize: 24,
    fontWeight: "bold",
  },
  underHeadingCont: {
    flex: 1,
  },
  carAdsCont: {
    flex: 1,
  },
  adCard: {
    flexDirection: "row",
    marginBottom: 10,
    padding: 10,
    backgroundColor: "#fff",
    borderRadius: 10,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.2,
    shadowRadius: 2,
    elevation: 2,
  },
  imgHolder: {
    marginRight: 10,
  },
  image: {
    width: 100,
    height: 100,
    borderRadius: 10,
  },
  detailHolder: {
    flex: 1,
    justifyContent: "space-between",
  },
  adTitle: {
    fontSize: 16,
    fontWeight: "bold",
  },
  adPrice: {
    fontSize: 18,
    fontWeight: "bold",
    color: "#cd0100",
  },
  featuredTag: {
    backgroundColor: "#ff0",
    padding: 5,
    borderRadius: 5,
    marginTop: 5,
  },
  filter: {
    flex: 1,
    paddingVertical: 0,
    paddingHorizontal: 0,
  },
  heading: {
    fontSize: 24,
    fontWeight: "bold",
    marginBottom: 20,
  },
  InputRangeDiv: {
    marginBottom: 25,
  },
  DataDiv: {
    marginBottom: 25,
    borderWidth: 0.5,
    borderColor: "transparent",
    // backgroundColor: "yellow",
    marginHorizontal: 20,
  },
  ButtonDiv: {
    marginBottom: 25,
    borderWidth: 0.5,
    borderColor: "transparent",
    // backgroundColor: "yellow",
    marginHorizontal: 20,
  },
  values: {
    flexDirection: "row",
    justifyContent: "space-between",
    paddingHorizontal: 20,
    paddingVertical: 5,
  },
  header: {
    backgroundColor: "#bd2a2a",
    flexDirection: "row",
    alignItems: "center",
    paddingTop: StatusBar.currentHeight,
    marginBottom: 30,
  },
  backButton: {
    // paddingRight: 20,
    tintColor: "white",
    marginLeft: 5,
  },
  backIcon: {
    width: 25,
    height: 25,
    tintColor: "white",
  },
  titleContainer: {
    flex: 1,
  },
  title: {
    color: "white",
    fontSize: 18,
    fontWeight: "bold",
    alignSelf: "center",
  },
});

export default Filter_AutoParts;
